/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.0.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

sourceSets {
    main {
        java.srcDirs = [ 'src/main/java' ]
        resources.srcDirs = [ 'src/main/resources' ]
    }
    test {
        java.srcDirs = [ 'src/test/java' ]
        resources.srcDirs = [ 'src/test/resources' ]
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    //Adding all jars from the libs directory
    compile fileTree(dir: 'libs', include: '*.jar')
    //compile group: 'net.sourceforge.owlapi', name: 'owlapi-distribution', version:'4.2.6'
}

jar {
    archiveName = "robot-plus.jar"
    manifest {
        attributes 'Main-Class': 'org.obolibrary.robot.CommandLineInterface'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}